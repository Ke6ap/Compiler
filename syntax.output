Terminals unused in grammar

    "case"
    "otherwise"


Grammar

    0 $accept: program "EOF"

    1 program: header declarations subprograms comp_statement "."

    2 header: "program" "id" ";"
    3       | error "id" ";"
    4       | "program" error ";"
    5       | "program" "id" error

    6 declarations: constdefs typedefs vardefs

    7 constdefs: "const" constant_defs ";"
    8          | error constant_defs ";"
    9          | "sconst" error ";"
   10          | "const" constant_defs error
   11          | %empty

   12 constant_defs: constant_defs ";" "id" "=" expression
   13              | "id" "=" expression

   14 expression: expression "> >= < <= <>" expression
   15           | expression "=" expression
   16           | expression "orop" expression
   17           | expression "+ -" expression
   18           | expression "* / DIV MOD AND" expression
   19           | "+ -" expression
   20           | "notop" expression
   21           | "HEAD TAIL" expression
   22           | variable
   23           | "id" "(" expressions ")"
   24           | "length" "(" expression ")"
   25           | constant
   26           | "(" expression ":" expression ")"
   27           | "(" expression ")"

   28 variable: "id"
   29         | variable "[" expressions "]"
   30         | variable "[" expressions error

   31 expressions: expressions "," expression
   32            | expression

   33 constant: "iconst"
   34         | "rconst"
   35         | "bconst"
   36         | "cconst"
   37         | "sconst"

   38 typedefs: "type" type_defs ";"
   39         | %empty

   40 type_defs: type_defs ";" "id" "=" type_def
   41          | "id" "=" type_def

   42 type_def: "array" "[" dims "]" "of" typename
   43         | "coyple" "of" typename
   44         | limit ".." limit

   45 dims: dims "," limits
   46     | limits

   47 limits: limit ".." limit
   48       | "id"

   49 limit: sign "iconst"
   50      | "cconst"
   51      | "bconst"
   52      | "+ -" "id"
   53      | "id"

   54 sign: "+ -"
   55     | %empty

   56 typename: standard_type
   57         | "id"

   58 standard_type: "integer"
   59              | "real"
   60              | "boolean"
   61              | "char"
   62              | "string"

   63 vardefs: "var" variable_defs ";"
   64        | %empty

   65 variable_defs: variable_defs ";" identifiers ":" typename
   66              | identifiers ":" typename

   67 identifiers: identifiers "," "id"
   68            | "id"

   69 subprograms: subprograms subprogram ";"
   70            | %empty

   71 subprogram: sub_header ";" "froward"
   72           | sub_header ";" declarations subprograms comp_statement

   73 sub_header: "function" "id" formal_parameters ":" typename
   74           | "procedure" "id" formal_parameters
   75           | "function" "id"

   76 formal_parameters: "(" parameter_list ")"
   77                  | %empty

   78 parameter_list: parameter_list ";" pass identifiers ":" typename
   79               | pass identifiers ":" typename

   80 pass: "var"
   81     | %empty

   82 $@1: %empty

   83 comp_statement: "begin" $@1 statements "end"

   84 statements: statements ";" statement
   85           | statement

   86 statement: assignment
   87          | if_statement
   88          | while_statement
   89          | for_statement
   90          | subprogram_call
   91          | io_statement
   92          | comp_statement
   93          | %empty

   94 assignment: variable ":=" expression
   95           | variable error expression
   96           | variable ":=" error

   97 if_statement: "if" expression "then" statement if_tail

   98 if_tail: "else" statement
   99        | %empty

  100 while_statement: "while" expression "do" statement

  101 for_statement: "for" "id" ":=" iter_space "do" statement

  102 iter_space: expression "to" expression
  103           | expression "downto" expression

  104 subprogram_call: "id"
  105                | "id" "(" expressions ")"

  106 io_statement: "read" "(" read_list ")"
  107             | "write" "(" write_list ")"

  108 read_list: read_list "," read_item
  109          | read_item

  110 read_item: variable

  111 write_list: write_list "," write_item
  112           | write_item

  113 write_item: expression


Terminals, with rules where they appear

    "EOF" (0) 0
    error (256) 3 4 5 8 9 10 30 95 96
    "program" (258) 2 4 5
    "const" (259) 7 10
    "type" (260) 38
    "coyple" (261) 43
    "array" (262) 42
    "of" (263) 42 43
    "var" (264) 63 80
    "froward" (265) 71
    "function" (266) 73 75
    "procedure" (267) 74
    "integer" (268) 58
    "real" (269) 59
    "boolean" (270) 60
    "char" (271) 61
    "string" (272) 62
    "begin" (273) 83
    "end" (274) 83
    "if" (275) 97
    "then" (276) 97
    "else" (277) 98
    "case" (278)
    "otherwise" (279)
    "while" (280) 100
    "do" (281) 100 101
    "for" (282) 101
    "downto" (283) 103
    "to" (284) 102
    "read" (285) 106
    "write" (286) 107
    "length" (287) 24
    "> >= < <= <>" (288) 14
    "+ -" (289) 17 19 52 54
    "orop" (290) 16
    "* / DIV MOD AND" (291) 18
    "notop" (292) 20
    "HEAD TAIL" (293) 21
    "(" (294) 23 24 26 27 76 105 106 107
    ")" (295) 23 24 26 27 76 105 106 107
    ";" (296) 2 3 4 7 8 9 12 38 40 63 65 69 71 72 78 84
    ".." (297) 44 47
    "." (298) 1
    "," (299) 31 45 67 108 111
    ":=" (300) 94 96 101
    "=" (301) 12 13 15 40 41
    ":" (302) 26 65 66 73 78 79
    "[" (303) 29 30 42
    "]" (304) 29 42
    "id" <stringval> (305) 2 3 5 12 13 23 28 40 41 48 52 53 57 67 68 73 74 75 101 104 105
    "iconst" <intval> (306) 33 49
    "bconst" <boolval> (307) 35 51
    "cconst" <charval> (308) 36 50
    "sconst" <stringval> (309) 9 37
    "rconst" <doubleval> (310) 34
    NO_ELSE (311)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    header (59)
        on left: 2 3 4 5
        on right: 1
    declarations (60)
        on left: 6
        on right: 1 72
    constdefs (61)
        on left: 7 8 9 10 11
        on right: 6
    constant_defs (62)
        on left: 12 13
        on right: 7 8 10 12
    expression (63)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 12 13 14 15 16 17 18 19 20 21 24 26 27 31 32 94 95 97 100 102 103 113
    variable (64)
        on left: 28 29 30
        on right: 22 29 30 94 95 96 110
    expressions (65)
        on left: 31 32
        on right: 23 29 30 31 105
    constant (66)
        on left: 33 34 35 36 37
        on right: 25
    typedefs (67)
        on left: 38 39
        on right: 6
    type_defs (68)
        on left: 40 41
        on right: 38 40
    type_def (69)
        on left: 42 43 44
        on right: 40 41
    dims (70)
        on left: 45 46
        on right: 42 45
    limits (71)
        on left: 47 48
        on right: 45 46
    limit (72)
        on left: 49 50 51 52 53
        on right: 44 47
    sign (73)
        on left: 54 55
        on right: 49
    typename (74)
        on left: 56 57
        on right: 42 43 65 66 73 78 79
    standard_type (75)
        on left: 58 59 60 61 62
        on right: 56
    vardefs (76)
        on left: 63 64
        on right: 6
    variable_defs (77)
        on left: 65 66
        on right: 63 65
    identifiers (78)
        on left: 67 68
        on right: 65 66 67 78 79
    subprograms (79)
        on left: 69 70
        on right: 1 69 72
    subprogram (80)
        on left: 71 72
        on right: 69
    sub_header (81)
        on left: 73 74 75
        on right: 71 72
    formal_parameters (82)
        on left: 76 77
        on right: 73 74
    parameter_list (83)
        on left: 78 79
        on right: 76 78
    pass (84)
        on left: 80 81
        on right: 78 79
    comp_statement (85)
        on left: 83
        on right: 1 72 92
    $@1 (86)
        on left: 82
        on right: 83
    statements (87)
        on left: 84 85
        on right: 83 84
    statement (88)
        on left: 86 87 88 89 90 91 92 93
        on right: 84 85 97 98 100 101
    assignment (89)
        on left: 94 95 96
        on right: 86
    if_statement (90)
        on left: 97
        on right: 87
    if_tail (91)
        on left: 98 99
        on right: 97
    while_statement (92)
        on left: 100
        on right: 88
    for_statement (93)
        on left: 101
        on right: 89
    iter_space (94)
        on left: 102 103
        on right: 101
    subprogram_call (95)
        on left: 104 105
        on right: 90
    io_statement (96)
        on left: 106 107
        on right: 91
    read_list (97)
        on left: 108 109
        on right: 106 108
    read_item (98)
        on left: 110
        on right: 108 109
    write_list (99)
        on left: 111 112
        on right: 107 111
    write_item (100)
        on left: 113
        on right: 111 112


State 0

    0 $accept: . program "EOF"

    error      shift, and go to state 1
    "program"  shift, and go to state 2

    program  go to state 3
    header   go to state 4


State 1

    3 header: error . "id" ";"

    "id"  shift, and go to state 5


State 2

    2 header: "program" . "id" ";"
    4       | "program" . error ";"
    5       | "program" . "id" error

    error  shift, and go to state 6
    "id"   shift, and go to state 7


State 3

    0 $accept: program . "EOF"

    "EOF"  shift, and go to state 8


State 4

    1 program: header . declarations subprograms comp_statement "."

    error     shift, and go to state 9
    "const"   shift, and go to state 10
    "sconst"  shift, and go to state 11

    "type"       reduce using rule 11 (constdefs)
    "var"        reduce using rule 11 (constdefs)
    "function"   reduce using rule 11 (constdefs)
    "procedure"  reduce using rule 11 (constdefs)
    "begin"      reduce using rule 11 (constdefs)

    declarations  go to state 12
    constdefs     go to state 13


State 5

    3 header: error "id" . ";"

    ";"  shift, and go to state 14


State 6

    4 header: "program" error . ";"

    ";"  shift, and go to state 15


State 7

    2 header: "program" "id" . ";"
    5       | "program" "id" . error

    error  shift, and go to state 16
    ";"    shift, and go to state 17


State 8

    0 $accept: program "EOF" .

    $default  accept


State 9

    8 constdefs: error . constant_defs ";"

    "id"  shift, and go to state 18

    constant_defs  go to state 19


State 10

    7 constdefs: "const" . constant_defs ";"
   10          | "const" . constant_defs error

    "id"  shift, and go to state 18

    constant_defs  go to state 20


State 11

    9 constdefs: "sconst" . error ";"

    error  shift, and go to state 21


State 12

    1 program: header declarations . subprograms comp_statement "."

    $default  reduce using rule 70 (subprograms)

    subprograms  go to state 22


State 13

    6 declarations: constdefs . typedefs vardefs

    "type"  shift, and go to state 23

    $default  reduce using rule 39 (typedefs)

    typedefs  go to state 24


State 14

    3 header: error "id" ";" .

    $default  reduce using rule 3 (header)


State 15

    4 header: "program" error ";" .

    $default  reduce using rule 4 (header)


State 16

    5 header: "program" "id" error .

    $default  reduce using rule 5 (header)


State 17

    2 header: "program" "id" ";" .

    $default  reduce using rule 2 (header)


State 18

   13 constant_defs: "id" . "=" expression

    "="  shift, and go to state 25


State 19

    8 constdefs: error constant_defs . ";"
   12 constant_defs: constant_defs . ";" "id" "=" expression

    ";"  shift, and go to state 26


State 20

    7 constdefs: "const" constant_defs . ";"
   10          | "const" constant_defs . error
   12 constant_defs: constant_defs . ";" "id" "=" expression

    error  shift, and go to state 27
    ";"    shift, and go to state 28


State 21

    9 constdefs: "sconst" error . ";"

    ";"  shift, and go to state 29


State 22

    1 program: header declarations subprograms . comp_statement "."
   69 subprograms: subprograms . subprogram ";"

    "function"   shift, and go to state 30
    "procedure"  shift, and go to state 31
    "begin"      shift, and go to state 32

    subprogram      go to state 33
    sub_header      go to state 34
    comp_statement  go to state 35


State 23

   38 typedefs: "type" . type_defs ";"

    "id"  shift, and go to state 36

    type_defs  go to state 37


State 24

    6 declarations: constdefs typedefs . vardefs

    "var"  shift, and go to state 38

    $default  reduce using rule 64 (vardefs)

    vardefs  go to state 39


State 25

   13 constant_defs: "id" "=" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 51
    variable    go to state 52
    constant    go to state 53


State 26

    8 constdefs: error constant_defs ";" .
   12 constant_defs: constant_defs ";" . "id" "=" expression

    "id"  shift, and go to state 54

    $default  reduce using rule 8 (constdefs)


State 27

   10 constdefs: "const" constant_defs error .

    $default  reduce using rule 10 (constdefs)


State 28

    7 constdefs: "const" constant_defs ";" .
   12 constant_defs: constant_defs ";" . "id" "=" expression

    "id"  shift, and go to state 54

    $default  reduce using rule 7 (constdefs)


State 29

    9 constdefs: "sconst" error ";" .

    $default  reduce using rule 9 (constdefs)


State 30

   73 sub_header: "function" . "id" formal_parameters ":" typename
   75           | "function" . "id"

    "id"  shift, and go to state 55


State 31

   74 sub_header: "procedure" . "id" formal_parameters

    "id"  shift, and go to state 56


State 32

   83 comp_statement: "begin" . $@1 statements "end"

    $default  reduce using rule 82 ($@1)

    $@1  go to state 57


State 33

   69 subprograms: subprograms subprogram . ";"

    ";"  shift, and go to state 58


State 34

   71 subprogram: sub_header . ";" "froward"
   72           | sub_header . ";" declarations subprograms comp_statement

    ";"  shift, and go to state 59


State 35

    1 program: header declarations subprograms comp_statement . "."

    "."  shift, and go to state 60


State 36

   41 type_defs: "id" . "=" type_def

    "="  shift, and go to state 61


State 37

   38 typedefs: "type" type_defs . ";"
   40 type_defs: type_defs . ";" "id" "=" type_def

    ";"  shift, and go to state 62


State 38

   63 vardefs: "var" . variable_defs ";"

    "id"  shift, and go to state 63

    variable_defs  go to state 64
    identifiers    go to state 65


State 39

    6 declarations: constdefs typedefs vardefs .

    $default  reduce using rule 6 (declarations)


State 40

   24 expression: "length" . "(" expression ")"

    "("  shift, and go to state 66


State 41

   19 expression: "+ -" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 67
    variable    go to state 52
    constant    go to state 53


State 42

   20 expression: "notop" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 68
    variable    go to state 52
    constant    go to state 53


State 43

   21 expression: "HEAD TAIL" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 69
    variable    go to state 52
    constant    go to state 53


State 44

   26 expression: "(" . expression ":" expression ")"
   27           | "(" . expression ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 70
    variable    go to state 52
    constant    go to state 53


State 45

   23 expression: "id" . "(" expressions ")"
   28 variable: "id" .

    "("  shift, and go to state 71

    $default  reduce using rule 28 (variable)


State 46

   33 constant: "iconst" .

    $default  reduce using rule 33 (constant)


State 47

   35 constant: "bconst" .

    $default  reduce using rule 35 (constant)


State 48

   36 constant: "cconst" .

    $default  reduce using rule 36 (constant)


State 49

   37 constant: "sconst" .

    $default  reduce using rule 37 (constant)


State 50

   34 constant: "rconst" .

    $default  reduce using rule 34 (constant)


State 51

   13 constant_defs: "id" "=" expression .
   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 13 (constant_defs)


State 52

   22 expression: variable .
   29 variable: variable . "[" expressions "]"
   30         | variable . "[" expressions error

    "["  shift, and go to state 77

    $default  reduce using rule 22 (expression)


State 53

   25 expression: constant .

    $default  reduce using rule 25 (expression)


State 54

   12 constant_defs: constant_defs ";" "id" . "=" expression

    "="  shift, and go to state 78


State 55

   73 sub_header: "function" "id" . formal_parameters ":" typename
   75           | "function" "id" .

    "("  shift, and go to state 79

    ":"       reduce using rule 77 (formal_parameters)
    $default  reduce using rule 75 (sub_header)

    formal_parameters  go to state 80


State 56

   74 sub_header: "procedure" "id" . formal_parameters

    "("  shift, and go to state 79

    $default  reduce using rule 77 (formal_parameters)

    formal_parameters  go to state 81


State 57

   83 comp_statement: "begin" $@1 . statements "end"

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statements       go to state 90
    statement        go to state 91
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 58

   69 subprograms: subprograms subprogram ";" .

    $default  reduce using rule 69 (subprograms)


State 59

   71 subprogram: sub_header ";" . "froward"
   72           | sub_header ";" . declarations subprograms comp_statement

    error      shift, and go to state 9
    "const"    shift, and go to state 10
    "froward"  shift, and go to state 98
    "sconst"   shift, and go to state 11

    "type"       reduce using rule 11 (constdefs)
    "var"        reduce using rule 11 (constdefs)
    "function"   reduce using rule 11 (constdefs)
    "procedure"  reduce using rule 11 (constdefs)
    "begin"      reduce using rule 11 (constdefs)

    declarations  go to state 99
    constdefs     go to state 13


State 60

    1 program: header declarations subprograms comp_statement "." .

    $default  reduce using rule 1 (program)


State 61

   41 type_defs: "id" "=" . type_def

    "coyple"  shift, and go to state 100
    "array"   shift, and go to state 101
    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 103
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    type_def  go to state 106
    limit     go to state 107
    sign      go to state 108


State 62

   38 typedefs: "type" type_defs ";" .
   40 type_defs: type_defs ";" . "id" "=" type_def

    "id"  shift, and go to state 109

    $default  reduce using rule 38 (typedefs)


State 63

   68 identifiers: "id" .

    $default  reduce using rule 68 (identifiers)


State 64

   63 vardefs: "var" variable_defs . ";"
   65 variable_defs: variable_defs . ";" identifiers ":" typename

    ";"  shift, and go to state 110


State 65

   66 variable_defs: identifiers . ":" typename
   67 identifiers: identifiers . "," "id"

    ","  shift, and go to state 111
    ":"  shift, and go to state 112


State 66

   24 expression: "length" "(" . expression ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 113
    variable    go to state 52
    constant    go to state 53


State 67

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   19           | "+ -" expression .

    "* / DIV MOD AND"  shift, and go to state 75

    $default  reduce using rule 19 (expression)


State 68

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   20           | "notop" expression .

    $default  reduce using rule 20 (expression)


State 69

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   21           | "HEAD TAIL" expression .

    $default  reduce using rule 21 (expression)


State 70

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   26           | "(" expression . ":" expression ")"
   27           | "(" expression . ")"

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    ")"                shift, and go to state 114
    "="                shift, and go to state 76
    ":"                shift, and go to state 115


State 71

   23 expression: "id" "(" . expressions ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression   go to state 116
    variable     go to state 52
    expressions  go to state 117
    constant     go to state 53


State 72

   14 expression: expression "> >= < <= <>" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 118
    variable    go to state 52
    constant    go to state 53


State 73

   17 expression: expression "+ -" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 119
    variable    go to state 52
    constant    go to state 53


State 74

   16 expression: expression "orop" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 120
    variable    go to state 52
    constant    go to state 53


State 75

   18 expression: expression "* / DIV MOD AND" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 121
    variable    go to state 52
    constant    go to state 53


State 76

   15 expression: expression "=" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 122
    variable    go to state 52
    constant    go to state 53


State 77

   29 variable: variable "[" . expressions "]"
   30         | variable "[" . expressions error

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression   go to state 116
    variable     go to state 52
    expressions  go to state 123
    constant     go to state 53


State 78

   12 constant_defs: constant_defs ";" "id" "=" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 124
    variable    go to state 52
    constant    go to state 53


State 79

   76 formal_parameters: "(" . parameter_list ")"

    "var"  shift, and go to state 125

    $default  reduce using rule 81 (pass)

    parameter_list  go to state 126
    pass            go to state 127


State 80

   73 sub_header: "function" "id" formal_parameters . ":" typename

    ":"  shift, and go to state 128


State 81

   74 sub_header: "procedure" "id" formal_parameters .

    $default  reduce using rule 74 (sub_header)


State 82

   97 if_statement: "if" . expression "then" statement if_tail

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 129
    variable    go to state 52
    constant    go to state 53


State 83

  100 while_statement: "while" . expression "do" statement

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 130
    variable    go to state 52
    constant    go to state 53


State 84

  101 for_statement: "for" . "id" ":=" iter_space "do" statement

    "id"  shift, and go to state 131


State 85

  106 io_statement: "read" . "(" read_list ")"

    "("  shift, and go to state 132


State 86

  107 io_statement: "write" . "(" write_list ")"

    "("  shift, and go to state 133


State 87

   28 variable: "id" .
  104 subprogram_call: "id" .
  105                | "id" . "(" expressions ")"

    "("  shift, and go to state 134

    "end"     reduce using rule 104 (subprogram_call)
    "else"    reduce using rule 104 (subprogram_call)
    ";"       reduce using rule 104 (subprogram_call)
    $default  reduce using rule 28 (variable)


State 88

   29 variable: variable . "[" expressions "]"
   30         | variable . "[" expressions error
   94 assignment: variable . ":=" expression
   95           | variable . error expression
   96           | variable . ":=" error

    error  shift, and go to state 135
    ":="   shift, and go to state 136
    "["    shift, and go to state 77


State 89

   92 statement: comp_statement .

    $default  reduce using rule 92 (statement)


State 90

   83 comp_statement: "begin" $@1 statements . "end"
   84 statements: statements . ";" statement

    "end"  shift, and go to state 137
    ";"    shift, and go to state 138


State 91

   85 statements: statement .

    $default  reduce using rule 85 (statements)


State 92

   86 statement: assignment .

    $default  reduce using rule 86 (statement)


State 93

   87 statement: if_statement .

    $default  reduce using rule 87 (statement)


State 94

   88 statement: while_statement .

    $default  reduce using rule 88 (statement)


State 95

   89 statement: for_statement .

    $default  reduce using rule 89 (statement)


State 96

   90 statement: subprogram_call .

    $default  reduce using rule 90 (statement)


State 97

   91 statement: io_statement .

    $default  reduce using rule 91 (statement)


State 98

   71 subprogram: sub_header ";" "froward" .

    $default  reduce using rule 71 (subprogram)


State 99

   72 subprogram: sub_header ";" declarations . subprograms comp_statement

    $default  reduce using rule 70 (subprograms)

    subprograms  go to state 139


State 100

   43 type_def: "coyple" . "of" typename

    "of"  shift, and go to state 140


State 101

   42 type_def: "array" . "[" dims "]" "of" typename

    "["  shift, and go to state 141


State 102

   52 limit: "+ -" . "id"
   54 sign: "+ -" .

    "id"  shift, and go to state 142

    $default  reduce using rule 54 (sign)


State 103

   53 limit: "id" .

    $default  reduce using rule 53 (limit)


State 104

   51 limit: "bconst" .

    $default  reduce using rule 51 (limit)


State 105

   50 limit: "cconst" .

    $default  reduce using rule 50 (limit)


State 106

   41 type_defs: "id" "=" type_def .

    $default  reduce using rule 41 (type_defs)


State 107

   44 type_def: limit . ".." limit

    ".."  shift, and go to state 143


State 108

   49 limit: sign . "iconst"

    "iconst"  shift, and go to state 144


State 109

   40 type_defs: type_defs ";" "id" . "=" type_def

    "="  shift, and go to state 145


State 110

   63 vardefs: "var" variable_defs ";" .
   65 variable_defs: variable_defs ";" . identifiers ":" typename

    "id"  shift, and go to state 63

    $default  reduce using rule 63 (vardefs)

    identifiers  go to state 146


State 111

   67 identifiers: identifiers "," . "id"

    "id"  shift, and go to state 147


State 112

   66 variable_defs: identifiers ":" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 154
    standard_type  go to state 155


State 113

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   24           | "length" "(" expression . ")"

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    ")"                shift, and go to state 156
    "="                shift, and go to state 76


State 114

   27 expression: "(" expression ")" .

    $default  reduce using rule 27 (expression)


State 115

   26 expression: "(" expression ":" . expression ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 157
    variable    go to state 52
    constant    go to state 53


State 116

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   32 expressions: expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 32 (expressions)


State 117

   23 expression: "id" "(" expressions . ")"
   31 expressions: expressions . "," expression

    ")"  shift, and go to state 158
    ","  shift, and go to state 159


State 118

   14 expression: expression . "> >= < <= <>" expression
   14           | expression "> >= < <= <>" expression .
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression

    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 14 (expression)


State 119

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   17           | expression "+ -" expression .
   18           | expression . "* / DIV MOD AND" expression

    "* / DIV MOD AND"  shift, and go to state 75

    $default  reduce using rule 17 (expression)


State 120

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   16           | expression "orop" expression .
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression

    "+ -"              shift, and go to state 73
    "* / DIV MOD AND"  shift, and go to state 75

    $default  reduce using rule 16 (expression)


State 121

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   18           | expression "* / DIV MOD AND" expression .

    $default  reduce using rule 18 (expression)


State 122

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   15           | expression "=" expression .
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression

    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75

    $default  reduce using rule 15 (expression)


State 123

   29 variable: variable "[" expressions . "]"
   30         | variable "[" expressions . error
   31 expressions: expressions . "," expression

    error  shift, and go to state 160
    ","    shift, and go to state 159
    "]"    shift, and go to state 161


State 124

   12 constant_defs: constant_defs ";" "id" "=" expression .
   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 12 (constant_defs)


State 125

   80 pass: "var" .

    $default  reduce using rule 80 (pass)


State 126

   76 formal_parameters: "(" parameter_list . ")"
   78 parameter_list: parameter_list . ";" pass identifiers ":" typename

    ")"  shift, and go to state 162
    ";"  shift, and go to state 163


State 127

   79 parameter_list: pass . identifiers ":" typename

    "id"  shift, and go to state 63

    identifiers  go to state 164


State 128

   73 sub_header: "function" "id" formal_parameters ":" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 165
    standard_type  go to state 155


State 129

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   97 if_statement: "if" expression . "then" statement if_tail

    "then"             shift, and go to state 166
    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76


State 130

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
  100 while_statement: "while" expression . "do" statement

    "do"               shift, and go to state 167
    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76


State 131

  101 for_statement: "for" "id" . ":=" iter_space "do" statement

    ":="  shift, and go to state 168


State 132

  106 io_statement: "read" "(" . read_list ")"

    "id"  shift, and go to state 169

    variable   go to state 170
    read_list  go to state 171
    read_item  go to state 172


State 133

  107 io_statement: "write" "(" . write_list ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 173
    variable    go to state 52
    constant    go to state 53
    write_list  go to state 174
    write_item  go to state 175


State 134

  105 subprogram_call: "id" "(" . expressions ")"

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression   go to state 116
    variable     go to state 52
    expressions  go to state 176
    constant     go to state 53


State 135

   95 assignment: variable error . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 177
    variable    go to state 52
    constant    go to state 53


State 136

   94 assignment: variable ":=" . expression
   96           | variable ":=" . error

    error        shift, and go to state 178
    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 179
    variable    go to state 52
    constant    go to state 53


State 137

   83 comp_statement: "begin" $@1 statements "end" .

    $default  reduce using rule 83 (comp_statement)


State 138

   84 statements: statements ";" . statement

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statement        go to state 180
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 139

   69 subprograms: subprograms . subprogram ";"
   72 subprogram: sub_header ";" declarations subprograms . comp_statement

    "function"   shift, and go to state 30
    "procedure"  shift, and go to state 31
    "begin"      shift, and go to state 32

    subprogram      go to state 33
    sub_header      go to state 34
    comp_statement  go to state 181


State 140

   43 type_def: "coyple" "of" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 182
    standard_type  go to state 155


State 141

   42 type_def: "array" "[" . dims "]" "of" typename

    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 183
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    dims    go to state 184
    limits  go to state 185
    limit   go to state 186
    sign    go to state 108


State 142

   52 limit: "+ -" "id" .

    $default  reduce using rule 52 (limit)


State 143

   44 type_def: limit ".." . limit

    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 103
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    limit  go to state 187
    sign   go to state 108


State 144

   49 limit: sign "iconst" .

    $default  reduce using rule 49 (limit)


State 145

   40 type_defs: type_defs ";" "id" "=" . type_def

    "coyple"  shift, and go to state 100
    "array"   shift, and go to state 101
    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 103
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    type_def  go to state 188
    limit     go to state 107
    sign      go to state 108


State 146

   65 variable_defs: variable_defs ";" identifiers . ":" typename
   67 identifiers: identifiers . "," "id"

    ","  shift, and go to state 111
    ":"  shift, and go to state 189


State 147

   67 identifiers: identifiers "," "id" .

    $default  reduce using rule 67 (identifiers)


State 148

   58 standard_type: "integer" .

    $default  reduce using rule 58 (standard_type)


State 149

   59 standard_type: "real" .

    $default  reduce using rule 59 (standard_type)


State 150

   60 standard_type: "boolean" .

    $default  reduce using rule 60 (standard_type)


State 151

   61 standard_type: "char" .

    $default  reduce using rule 61 (standard_type)


State 152

   62 standard_type: "string" .

    $default  reduce using rule 62 (standard_type)


State 153

   57 typename: "id" .

    $default  reduce using rule 57 (typename)


State 154

   66 variable_defs: identifiers ":" typename .

    $default  reduce using rule 66 (variable_defs)


State 155

   56 typename: standard_type .

    $default  reduce using rule 56 (typename)


State 156

   24 expression: "length" "(" expression ")" .

    $default  reduce using rule 24 (expression)


State 157

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   26           | "(" expression ":" expression . ")"

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    ")"                shift, and go to state 190
    "="                shift, and go to state 76


State 158

   23 expression: "id" "(" expressions ")" .

    $default  reduce using rule 23 (expression)


State 159

   31 expressions: expressions "," . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 191
    variable    go to state 52
    constant    go to state 53


State 160

   30 variable: variable "[" expressions error .

    $default  reduce using rule 30 (variable)


State 161

   29 variable: variable "[" expressions "]" .

    $default  reduce using rule 29 (variable)


State 162

   76 formal_parameters: "(" parameter_list ")" .

    $default  reduce using rule 76 (formal_parameters)


State 163

   78 parameter_list: parameter_list ";" . pass identifiers ":" typename

    "var"  shift, and go to state 125

    $default  reduce using rule 81 (pass)

    pass  go to state 192


State 164

   67 identifiers: identifiers . "," "id"
   79 parameter_list: pass identifiers . ":" typename

    ","  shift, and go to state 111
    ":"  shift, and go to state 193


State 165

   73 sub_header: "function" "id" formal_parameters ":" typename .

    $default  reduce using rule 73 (sub_header)


State 166

   97 if_statement: "if" expression "then" . statement if_tail

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statement        go to state 194
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 167

  100 while_statement: "while" expression "do" . statement

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statement        go to state 195
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 168

  101 for_statement: "for" "id" ":=" . iter_space "do" statement

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 196
    variable    go to state 52
    constant    go to state 53
    iter_space  go to state 197


State 169

   28 variable: "id" .

    $default  reduce using rule 28 (variable)


State 170

   29 variable: variable . "[" expressions "]"
   30         | variable . "[" expressions error
  110 read_item: variable .

    "["  shift, and go to state 77

    $default  reduce using rule 110 (read_item)


State 171

  106 io_statement: "read" "(" read_list . ")"
  108 read_list: read_list . "," read_item

    ")"  shift, and go to state 198
    ","  shift, and go to state 199


State 172

  109 read_list: read_item .

    $default  reduce using rule 109 (read_list)


State 173

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
  113 write_item: expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 113 (write_item)


State 174

  107 io_statement: "write" "(" write_list . ")"
  111 write_list: write_list . "," write_item

    ")"  shift, and go to state 200
    ","  shift, and go to state 201


State 175

  112 write_list: write_item .

    $default  reduce using rule 112 (write_list)


State 176

   31 expressions: expressions . "," expression
  105 subprogram_call: "id" "(" expressions . ")"

    ")"  shift, and go to state 202
    ","  shift, and go to state 159


State 177

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   95 assignment: variable error expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 95 (assignment)


State 178

   96 assignment: variable ":=" error .

    $default  reduce using rule 96 (assignment)


State 179

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   94 assignment: variable ":=" expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 94 (assignment)


State 180

   84 statements: statements ";" statement .

    $default  reduce using rule 84 (statements)


State 181

   72 subprogram: sub_header ";" declarations subprograms comp_statement .

    $default  reduce using rule 72 (subprogram)


State 182

   43 type_def: "coyple" "of" typename .

    $default  reduce using rule 43 (type_def)


State 183

   48 limits: "id" .
   53 limit: "id" .

    ".."      reduce using rule 53 (limit)
    $default  reduce using rule 48 (limits)


State 184

   42 type_def: "array" "[" dims . "]" "of" typename
   45 dims: dims . "," limits

    ","  shift, and go to state 203
    "]"  shift, and go to state 204


State 185

   46 dims: limits .

    $default  reduce using rule 46 (dims)


State 186

   47 limits: limit . ".." limit

    ".."  shift, and go to state 205


State 187

   44 type_def: limit ".." limit .

    $default  reduce using rule 44 (type_def)


State 188

   40 type_defs: type_defs ";" "id" "=" type_def .

    $default  reduce using rule 40 (type_defs)


State 189

   65 variable_defs: variable_defs ";" identifiers ":" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 206
    standard_type  go to state 155


State 190

   26 expression: "(" expression ":" expression ")" .

    $default  reduce using rule 26 (expression)


State 191

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
   31 expressions: expressions "," expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 31 (expressions)


State 192

   78 parameter_list: parameter_list ";" pass . identifiers ":" typename

    "id"  shift, and go to state 63

    identifiers  go to state 207


State 193

   79 parameter_list: pass identifiers ":" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 208
    standard_type  go to state 155


State 194

   97 if_statement: "if" expression "then" statement . if_tail

    "else"  shift, and go to state 209

    $default  reduce using rule 99 (if_tail)

    if_tail  go to state 210


State 195

  100 while_statement: "while" expression "do" statement .

    $default  reduce using rule 100 (while_statement)


State 196

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
  102 iter_space: expression . "to" expression
  103           | expression . "downto" expression

    "downto"           shift, and go to state 211
    "to"               shift, and go to state 212
    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76


State 197

  101 for_statement: "for" "id" ":=" iter_space . "do" statement

    "do"  shift, and go to state 213


State 198

  106 io_statement: "read" "(" read_list ")" .

    $default  reduce using rule 106 (io_statement)


State 199

  108 read_list: read_list "," . read_item

    "id"  shift, and go to state 169

    variable   go to state 170
    read_item  go to state 214


State 200

  107 io_statement: "write" "(" write_list ")" .

    $default  reduce using rule 107 (io_statement)


State 201

  111 write_list: write_list "," . write_item

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 173
    variable    go to state 52
    constant    go to state 53
    write_item  go to state 215


State 202

  105 subprogram_call: "id" "(" expressions ")" .

    $default  reduce using rule 105 (subprogram_call)


State 203

   45 dims: dims "," . limits

    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 183
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    limits  go to state 216
    limit   go to state 186
    sign    go to state 108


State 204

   42 type_def: "array" "[" dims "]" . "of" typename

    "of"  shift, and go to state 217


State 205

   47 limits: limit ".." . limit

    "+ -"     shift, and go to state 102
    "id"      shift, and go to state 103
    "bconst"  shift, and go to state 104
    "cconst"  shift, and go to state 105

    $default  reduce using rule 55 (sign)

    limit  go to state 218
    sign   go to state 108


State 206

   65 variable_defs: variable_defs ";" identifiers ":" typename .

    $default  reduce using rule 65 (variable_defs)


State 207

   67 identifiers: identifiers . "," "id"
   78 parameter_list: parameter_list ";" pass identifiers . ":" typename

    ","  shift, and go to state 111
    ":"  shift, and go to state 219


State 208

   79 parameter_list: pass identifiers ":" typename .

    $default  reduce using rule 79 (parameter_list)


State 209

   98 if_tail: "else" . statement

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statement        go to state 220
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 210

   97 if_statement: "if" expression "then" statement if_tail .

    $default  reduce using rule 97 (if_statement)


State 211

  103 iter_space: expression "downto" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 221
    variable    go to state 52
    constant    go to state 53


State 212

  102 iter_space: expression "to" . expression

    "length"     shift, and go to state 40
    "+ -"        shift, and go to state 41
    "notop"      shift, and go to state 42
    "HEAD TAIL"  shift, and go to state 43
    "("          shift, and go to state 44
    "id"         shift, and go to state 45
    "iconst"     shift, and go to state 46
    "bconst"     shift, and go to state 47
    "cconst"     shift, and go to state 48
    "sconst"     shift, and go to state 49
    "rconst"     shift, and go to state 50

    expression  go to state 222
    variable    go to state 52
    constant    go to state 53


State 213

  101 for_statement: "for" "id" ":=" iter_space "do" . statement

    "begin"  shift, and go to state 32
    "if"     shift, and go to state 82
    "while"  shift, and go to state 83
    "for"    shift, and go to state 84
    "read"   shift, and go to state 85
    "write"  shift, and go to state 86
    "id"     shift, and go to state 87

    $default  reduce using rule 93 (statement)

    variable         go to state 88
    comp_statement   go to state 89
    statement        go to state 223
    assignment       go to state 92
    if_statement     go to state 93
    while_statement  go to state 94
    for_statement    go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 214

  108 read_list: read_list "," read_item .

    $default  reduce using rule 108 (read_list)


State 215

  111 write_list: write_list "," write_item .

    $default  reduce using rule 111 (write_list)


State 216

   45 dims: dims "," limits .

    $default  reduce using rule 45 (dims)


State 217

   42 type_def: "array" "[" dims "]" "of" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 224
    standard_type  go to state 155


State 218

   47 limits: limit ".." limit .

    $default  reduce using rule 47 (limits)


State 219

   78 parameter_list: parameter_list ";" pass identifiers ":" . typename

    "integer"  shift, and go to state 148
    "real"     shift, and go to state 149
    "boolean"  shift, and go to state 150
    "char"     shift, and go to state 151
    "string"   shift, and go to state 152
    "id"       shift, and go to state 153

    typename       go to state 225
    standard_type  go to state 155


State 220

   98 if_tail: "else" statement .

    $default  reduce using rule 98 (if_tail)


State 221

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
  103 iter_space: expression "downto" expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 103 (iter_space)


State 222

   14 expression: expression . "> >= < <= <>" expression
   15           | expression . "=" expression
   16           | expression . "orop" expression
   17           | expression . "+ -" expression
   18           | expression . "* / DIV MOD AND" expression
  102 iter_space: expression "to" expression .

    "> >= < <= <>"     shift, and go to state 72
    "+ -"              shift, and go to state 73
    "orop"             shift, and go to state 74
    "* / DIV MOD AND"  shift, and go to state 75
    "="                shift, and go to state 76

    $default  reduce using rule 102 (iter_space)


State 223

  101 for_statement: "for" "id" ":=" iter_space "do" statement .

    $default  reduce using rule 101 (for_statement)


State 224

   42 type_def: "array" "[" dims "]" "of" typename .

    $default  reduce using rule 42 (type_def)


State 225

   78 parameter_list: parameter_list ";" pass identifiers ":" typename .

    $default  reduce using rule 78 (parameter_list)
